basePath: /
definitions:
  dto.AuthInputDto:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.CreateProductInputDto:
    properties:
      name:
        type: string
      price:
        type: number
    type: object
  dto.CreateUserInputDto:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  dto.ProductOutputDto:
    properties:
      id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  handlers.Error:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: brunoofgod@gmail.com
    name: Bruno de Deus
    url: https://github.com/brunoofgod
  description: Go Simple API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Go Simple API
  version: "1.0"
paths:
  /products:
    get:
      consumes:
      - application/json
      description: List Products
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ProductOutputDto'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: List Products
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: Create Product
      parameters:
      - description: Create Product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.CreateProductInputDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Create Product
      tags:
      - Product
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Product
      parameters:
      - description: Product ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete Product
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: Get Product
      parameters:
      - description: Product ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProductOutputDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Get Product
      tags:
      - Product
    put:
      consumes:
      - application/json
      description: Update Product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.CreateProductInputDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Update Product
      tags:
      - Product
  /users:
    post:
      consumes:
      - application/json
      description: Create User
      parameters:
      - description: Create User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserInputDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Create User
      tags:
      - User
  /users/auth:
    post:
      consumes:
      - application/json
      description: Auth User
      parameters:
      - description: Auth User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.AuthInputDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Auth User
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
